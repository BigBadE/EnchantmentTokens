plugins {
    id "org.sonarqube" version "2.7"
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'java'
}

allprojects {
    group = 'software.bigbade'
    version = '1.0'

    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'java'
    apply plugin: 'jacoco'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()

        maven {
            url = uri('https://repo1.maven.org/maven2')
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    configurations {
        resolveImplementation
        resolveImplementation.extendsFrom(implementation)
    }

    sourceSets {
        test {
            compileClasspath += configurations.resolveImplementation
            compileClasspath += configurations.shadow
            runtimeClasspath += configurations.resolveImplementation
            runtimeClasspath += configurations.shadow
        }
    }
}

subprojects {
    repositories {
        maven {
            url = uri('https://maven.pkg.github.com/bigbade/enchantmenttokens')
        }

        maven {
            url = uri('https://hub.spigotmc.org/nexus/content/repositories/snapshots/')
        }

        maven {
            url = uri('https://repo.aikar.co/content/groups/aikar/')
        }

        maven {
            url = uri('https://papermc.io/repo/repository/maven-public/')
        }

        maven {
            url = uri('https://repo.codemc.org/repository/maven-public')
        }

        maven {
            url = uri('https://repo.dmulloy2.net/nexus/repository/public/')
        }

        maven {
            url = uri('https://jitpack.io')
        }

        maven {
            url = uri('https://maven.sk89q.com/repo')
        }

        maven {
            url = uri('https://libraries.minecraft.net')
        }
    }

    test.useTestNG()
}

dependencies {
    implementation project(':development')
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        xml.destination file("${buildDir}/reports/jacoco/report.xml")
        html.enabled false
        csv.enabled false
    }
}

codeCoverageReport.dependsOn {
    subprojects*.test
}

shadowJar {
    classifier = ''
    relocate 'co.aikar', 'software.bigbade'
    relocate 'com.codingforcookies', 'software.bigbade'
    relocate 'me.lucko', 'software.bigbade'
    relocate 'org.bstats', 'software.bigbade'

    exclude 'META-INF/**'

    from('.') {
        include 'localization/*.properties'
        include 'commodore/*.commodore'
    }

    from('resources') {
        include '*'
    }
}

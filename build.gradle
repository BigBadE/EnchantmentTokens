/*
 * Custom enchantments for Minecraft
 * Copyright (C) 2021 Big_Bad_E
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

plugins {
    id "org.sonarqube" version "3.1"
    id 'java'
}

allprojects {
    group = 'com.bigbade'
    version = '1.1-alpha'

    apply plugin: 'java'
    apply plugin: 'jacoco'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()

        maven {
            url = uri('https://repo1.maven.org/maven2')
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
}

subprojects {
    repositories {
        maven {
            url = uri('https://maven.pkg.github.com/bigbade/enchantmenttokens')
        }

        maven {
            url = uri('https://hub.spigotmc.org/nexus/content/repositories/snapshots/')
        }

        maven {
            url = uri('https://repo.aikar.co/content/groups/aikar/')
        }

        maven {
            url = uri('https://papermc.io/repo/repository/maven-public/')
        }

        maven {
            url = uri('https://repo.codemc.org/repository/maven-public')
        }

        maven {
            url = uri('https://repo.dmulloy2.net/nexus/repository/public/')
        }

        maven {
            url = uri('https://jitpack.io')
        }

        maven {
            url = uri('https://maven.sk89q.com/repo')
        }

        maven {
            url = uri('https://libraries.minecraft.net')
        }
    }

    test.useTestNG()
}

dependencies {
    implementation project(':development')
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        //noinspection GroovyAssignabilityCheck
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        xml.destination file("${buildDir}/reports/jacoco/report.xml")
        html.enabled false
        csv.enabled false
    }
}

codeCoverageReport.dependsOn {
    //noinspection GrUnresolvedAccess
    subprojects*.test
}
